import seaborn as sns
import pandas as pd
import numpy as np
import tabulate
from sellibrary.util.const import Const

sns.set(style="ticks")
import matplotlib.pyplot as plt


def seaborn(x, y, xlabel, ylabel, filename):
    fig = plt.figure()
    sns_plot = sns.regplot(x=x, y=y, fit_reg=False, # , marker="."
                           line_kws={"color": "r", "alpha": 0.7, "lw": 5},
                           scatter_kws={"color": {"black","blue"} , "marker":{".","o"} } #, "s":{1,2} } #
                           )  #
    sns_plot.set_xlabel(xlabel)
    sns_plot.set_ylabel(ylabel)
    fig = sns_plot.get_figure()
    fig.savefig(filename)



base_set_to_supress = {0, 1, 2, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}
contribution_by_feature_number_ordered = [(4, 0.10169999999999996), (7, 0.01749999999999996), (3, 0.015199999999999991), (30, 0.004599999999999993), (39, 0.003500000000000003), (43, 0.003500000000000003), (51, 0.003500000000000003), (57, 0.003500000000000003), (62, 0.003500000000000003), (6, 0.0022999999999999687), (10, 0.0022999999999999687), (31, 0.0022999999999999687), (40, 0.0022999999999999687), (44, 0.0022999999999999687), (46, 0.0022999999999999687), (49, 0.0022999999999999687), (53, 0.0022999999999999687), (59, 0.0022999999999999687), (61, 0.0022999999999999687), (63, 0.0022999999999999687), (5, 0.0010999999999999899), (9, 0.0010999999999999899), (18, 0.0010999999999999899), (22, 0.0010999999999999899), (26, 0.0010999999999999899), (28, 0.0010999999999999899), (34, 0.0010999999999999899), (37, 0.0010999999999999899), (38, 0.0010999999999999899), (47, 0.0010999999999999899), (52, 0.0010999999999999899), (58, 0.0010999999999999899), (60, 0.0010999999999999899), (64, 0.0010999999999999899), (0, 0.0), (8, 0.0), (12, 0.0), (14, 0.0), (17, 0.0), (21, 0.0), (24, 0.0), (27, 0.0), (29, 0.0), (32, 0.0), (55, 0.0), (1, -0.0012000000000000344), (2, -0.0012000000000000344), (16, -0.0012000000000000344), (19, -0.0012000000000000344), (20, -0.0012000000000000344), (35, -0.0012000000000000344), (36, -0.0012000000000000344), (41, -0.0012000000000000344), (48, -0.0012000000000000344), (11, -0.0024000000000000687), (13, -0.0024000000000000687), (15, -0.0024000000000000687), (23, -0.0024000000000000687), (25, -0.0024000000000000687), (33, -0.0024000000000000687), (42, -0.0024000000000000687), (45, -0.0024000000000000687), (50, -0.0024000000000000687), (56, -0.0024000000000000687), (54, -0.0036000000000000476)]
P_5_by_feature_number = [[62, 0.5205], [61, 0.5251], [64, 0.5228], [38, 0.5251], [59, 0.5263], [58, 0.5251], [51, 0.5228], [60, 0.5263], [53, 0.5251], [36, 0.5228], [56, 0.5263], [41, 0.524], [27, 0.5216], [17, 0.5205], [52, 0.5263], [40, 0.5263], [15, 0.5251], [45, 0.5251], [37, 0.5287], [57, 0.5228], [47, 0.5193], [21, 0.5263], [0, 0.5228], [9, 0.524], [34, 0.524], [30, 0.5298], [55, 0.5263], [18, 0.524], [10, 0.524], [8, 0.5216], [24, 0.524], [29, 0.5181], [49, 0.524], [14, 0.5251], [25, 0.524], [31, 0.5275], [20, 0.5287], [42, 0.5193], [5, 0.5263], [54, 0.5228], [44, 0.5251], [63, 0.5251], [35, 0.5287], [32, 0.524], [26, 0.5263], [23, 0.531], [46, 0.5287], [50, 0.5275], [33, 0.5263], [13, 0.5263], [28, 0.5263], [6, 0.5287], [11, 0.5251], [43, 0.5205], [1, 0.5228], [48, 0.5228], [22, 0.5205], [16, 0.5123], [12, 0.5205], [19, 0.5158], [39, 0.5146], [2, 0.5029], [3, 0.4982]]
oob_by_feature_number = [[62, 0.5762445434225434], [61, 0.5765754067577993], [64, 0.5800063986960099], [38, 0.5788663783137138], [59, 0.5758822503390735], [58, 0.5799757796280395], [51, 0.5708976945389148], [60, 0.5819754361527846], [53, 0.5766353634807779], [36, 0.576197803036119], [56, 0.5728742989847655], [41, 0.5755219464069118], [27, 0.5786050660090942], [17, 0.5814301660504415], [52, 0.5845531058564999], [40, 0.5809586174293067], [15, 0.579459970459013], [45, 0.5776702481369784], [37, 0.5786752280057186], [57, 0.5744559897591135], [47, 0.5761423551555558], [21, 0.5797333396105245], [0, 0.5774749830362478], [9, 0.567413489835538], [34, 0.5711956343190434], [30, 0.566126566793721], [55, 0.574999616010003], [18, 0.575429922344054], [10, 0.5710663455849805], [8, 0.5681053431545002], [24, 0.5641470492010616], [29, 0.5700928600988991], [49, 0.5725576271298691], [14, 0.5702552117284727], [25, 0.5658135510594174], [31, 0.5671989493200844], [20, 0.5631344463441093], [42, 0.5614155406846826], [5, 0.5625720975376114], [54, 0.5615130248361713], [44, 0.565999046583564], [63, 0.5605930821986587], [35, 0.558108153706568], [32, 0.5610044970542502], [26, 0.5540986064270255], [23, 0.5562434270291075], [46, 0.555377255231274], [50, 0.5614929835180691], [33, 0.5552633998307303], [13, 0.5524611830570632], [28, 0.560681821541297], [6, 0.5589078074385674], [11, 0.5628318433099833], [43, 0.5602680051148273], [1, 0.5567362591583251], [48, 0.5611119388151713], [22, 0.5594496611092914], [16, 0.5502279032452702], [12, 0.48151884332368755], [19, 0.46262965901639314], [39, 0.40048487961959744], [2, 0.3562130554434578], [3, 0.3723732489575563]]



x = np.zeros(shape=(len(P_5_by_feature_number),2))
y = np.zeros(shape=(len(P_5_by_feature_number),2))
for i in range(len(P_5_by_feature_number)):
    y[i,0] = P_5_by_feature_number[i][1]
    y[i,1] = oob_by_feature_number[i][1]

    x[i,0] = i
    x[i,1] = i

seaborn(x, y, 'number of worst features removed', 'P@5', 'P_5_by_feature_number.png')

const = Const()
joined = const.get_joined_feature_names()

for i in range(len(P_5_by_feature_number)):
    fn = P_5_by_feature_number[i][0]
    print (joined[fn])

for fn in [3,4,7]:
    print (joined[fn])

for i in range(65):
    if i not in base_set_to_supress:
        print(i)

